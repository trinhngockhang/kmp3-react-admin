{"version":3,"sources":["logo.svg","Component/Users/Users.js","Component/Songs/Songs.js","Component/Singer/Singer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Users","props","List","title","Datagrid","rowClick","TextField","source","label","DateField","NewEmailField","record","rest","EmailField","NewFbField","UserDetail","Show","SimpleShowLayout","ImageField","UserCreate","Create","SimpleForm","ReferenceInput","reference","TextInput","UserEdit","Edit","Songs","ArrayField","SongDetail","SongCreate","SongEdit","Singers","SingerDetail","RichTextField","SingerCreate","SingerEdit","dataProvider","jsonServerProvider","App","Admin","Resource","name","list","show","edit","create","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+IAAAA,EAAOC,QAAU,IAA0B,kC,iRCI9BC,EAAQ,SAAAC,GAAK,OACtB,kBAACC,EAAA,EAAD,iBAAUD,EAAV,CAAkBE,MAAM,eACpB,kBAACC,EAAA,EAAD,CAAUC,SAAS,QACf,kBAACC,EAAA,EAAD,CAAWC,OAAO,OAAOC,MAAM,WAC/B,kBAACF,EAAA,EAAD,CAAWC,OAAO,WAAWC,MAAM,oCACnC,kBAACC,EAAA,EAAD,CAAWF,OAAO,YAAYC,MAAM,qBACpC,kBAAC,EAAD,CAAeD,OAAO,UACtB,kBAAC,EAAD,CAAYA,OAAO,YAKzBG,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAWC,EAAd,iCACpBD,GAAUA,EAAOC,EAAKL,QACpB,kBAACM,EAAA,EAAD,eAAYN,OAAO,QAAQI,OAAQA,GAAYC,IAC7C,qEAEAE,EAAa,SAAC,GAAD,IAAGH,EAAH,EAAGA,OAAWC,EAAd,iCACjBD,GAAUA,EAAOC,EAAKL,QACpB,kBAACD,EAAA,EAAD,eAAWC,OAAO,OAAOI,OAAQA,GAAYC,IAC7C,wEAGSG,EAAa,SAACd,GAAD,OACxB,kBAACe,EAAA,EAASf,EACN,kBAACgB,EAAA,EAAD,KACM,kBAACX,EAAA,EAAD,CAAWC,OAAO,OAAOC,MAAM,WAC/B,kBAACU,EAAA,EAAD,CAAYX,OAAO,SAASC,MAAM,YAClC,kBAACF,EAAA,EAAD,CAAWC,OAAO,WAAWC,MAAM,oCACnC,kBAAC,EAAD,CAAeD,OAAO,QAAQC,MAAM,UACpC,6BACA,kBAAC,EAAD,CAAYD,OAAO,YAKlBY,EAAa,SAAAlB,GAAK,OAC7B,kBAACmB,EAAA,EAAWnB,EACR,kBAACoB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBf,OAAO,OAAOgB,UAAU,YAExC,kBAACC,EAAA,EAAD,CAAWjB,OAAO,mBAKfkB,EAAW,SAAAxB,GAAK,OAC3B,kBAACyB,EAAA,EAASzB,EACN,kBAACoB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAWjB,OAAO,OAAOC,MAAM,WAC/B,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,SAASC,MAAM,YACjC,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,WAAWC,MAAM,oCACnC,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,UAClB,kBAACiB,EAAA,EAAD,CAAWjB,OAAO,Y,SCrDboB,EAAQ,SAAA1B,GAAK,OACtB,kBAACC,EAAA,EAAD,iBAAUD,EAAV,CAAkBE,MAAM,cACpB,kBAACC,EAAA,EAAD,CAAUC,SAAS,QACf,kBAACC,EAAA,EAAD,CAAWC,OAAO,WAAWC,MAAM,kBACnC,kBAACF,EAAA,EAAD,CAAWC,OAAO,aAAaC,MAAM,wBACrC,kBAACF,EAAA,EAAD,CAAWC,OAAO,SAASC,MAAM,mBACjC,kBAACoB,EAAA,EAAD,CAAYrB,OAAO,SAASC,MAAM,cAChC,kBAACJ,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWC,OAAO,gBAOrBsB,EAAa,SAAC5B,GAAD,OACxB,kBAACe,EAAA,EAASf,EACN,kBAACgB,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CAAWC,OAAO,WAAWC,MAAM,kBAC/B,kBAACF,EAAA,EAAD,CAAWC,OAAO,aAAaC,MAAM,wBACrC,kBAACU,EAAA,EAAD,CAAYX,OAAO,UACnB,kBAACD,EAAA,EAAD,CAAWC,OAAO,SAASC,MAAM,mBACjC,kBAACoB,EAAA,EAAD,CAAYrB,OAAO,SAASC,MAAM,cAChC,kBAACJ,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWC,OAAO,aAGtB,kBAACqB,EAAA,EAAD,CAAYrB,OAAO,aAAaC,MAAM,sBACpC,kBAACJ,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWC,OAAO,cAOrBuB,EAAa,SAAA7B,GAAK,OAC7B,kBAACmB,EAAA,EAAWnB,EACR,kBAACoB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBf,OAAO,OAAOgB,UAAU,YAExC,kBAACC,EAAA,EAAD,CAAWjB,OAAO,mBAKfwB,EAAW,SAAA9B,GAAK,OAC3B,kBAACyB,EAAA,EAASzB,EACN,kBAACoB,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CAAWjB,OAAO,WAAWC,MAAM,kBACnC,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,SAASC,MAAM,mBACjC,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,QAAQC,MAAM,WAChC,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,WAAWC,MAAM,uB,SCnD5BwB,EAAU,SAAA/B,GAAK,OACxB,kBAACC,EAAA,EAAD,iBAAUD,EAAV,CAAkBE,MAAM,cACpB,kBAACC,EAAA,EAAD,CAAUC,SAAS,QACf,kBAACC,EAAA,EAAD,CAAWC,OAAO,OAAOC,MAAM,WAC/B,kBAACF,EAAA,EAAD,CAAWC,OAAO,cAAcC,MAAM,kBACtC,kBAACU,EAAA,EAAD,CAAYX,OAAO,SAASC,MAAM,cAKjCyB,EAAe,SAAChC,GAAD,OACxB,kBAACe,EAAA,EAASf,EACN,kBAACgB,EAAA,EAAD,KACI,kBAACX,EAAA,EAAD,CAAWC,OAAO,SAClB,kBAACW,EAAA,EAAD,CAAYX,OAAO,SAASC,MAAM,WAClC,kBAAC0B,EAAA,EAAD,CAAe3B,OAAO,mBAKrB4B,EAAe,SAAAlC,GAAK,OAC7B,kBAACmB,EAAA,EAAWnB,EACR,kBAACoB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBf,OAAO,OAAOgB,UAAU,YAExC,kBAACC,EAAA,EAAD,CAAWjB,OAAO,mBAKjB6B,EAAa,SAAAnC,GAAK,OAC3B,kBAACyB,EAAA,EAASzB,EACN,kBAACoB,EAAA,EAAD,KACG,kBAACG,EAAA,EAAD,CAAWjB,OAAO,OAAOC,MAAM,WAC/B,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,cAAcC,MAAM,kBACtC,kBAACgB,EAAA,EAAD,CAAWjB,OAAO,SAASC,MAAM,cC7BtC6B,EAAeC,YAAmB,gCAYzBC,MAVf,WACE,OACE,kBAACC,EAAA,EAAD,CAAOH,aAAcA,GACnB,kBAACI,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAMhB,EAAOiB,KAAMf,EAAYgB,KAAMd,EAAUe,OAAQhB,IAC9E,kBAACW,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAM3C,EAAO4C,KAAM7B,EAAY8B,KAAMpB,EAAUqB,OAAQ3B,IAC9E,kBAACsB,EAAA,EAAD,CAAUC,KAAK,UAAUC,KAAMX,EAASY,KAAMX,EAAcY,KAAMT,EAAYU,OAAQX,MCNxEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5d7623c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { List, Datagrid, TextField, ImageField, SimpleShowLayout,\n  Show, RichTextField, Create, SimpleForm,Edit, DateField,\n   ReferenceInput, TextInput, EmailField} from 'react-admin';\nexport const Users = props => (\n    <List {...props}  title=\"List Users\">\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"name\" label=\"Tên\" />\n            <TextField source=\"username\" label=\"Tên đăng nhập\" />\n            <DateField source=\"createdAt\" label=\"Ngày tạo\" ></DateField>\n            <NewEmailField source=\"email\" />\n            <NewFbField source=\"fbId\" />\n        </Datagrid>\n    </List>\n);\n\nconst NewEmailField = ({ record, ...rest }) =>\n  record && record[rest.source] ? (\n    <EmailField source=\"email\" record={record} {...rest}/>\n  ) : <span>Chưa cập nhật email</span>;\n\nconst NewFbField = ({ record, ...rest }) =>\n  record && record[rest.source] ? (\n    <TextField source=\"fbId\" record={record} {...rest}/>\n) : <span>Chưa cập nhật Facebook</span>;\n\n\nexport const UserDetail = (props) => (\n  <Show {...props}>\n      <SimpleShowLayout>\n            <TextField source=\"name\" label=\"Tên\" />\n            <ImageField source=\"avatar\" label=\"Avartar\"/>\n            <TextField source=\"username\" label=\"Tên đăng nhập\" />\n            <NewEmailField source=\"email\" label=\"Email\" />\n            <br/>\n            <NewFbField source=\"fbId\" />\n      </SimpleShowLayout>\n  </Show>\n);\n\nexport const UserCreate = props => (\n  <Create {...props}>\n      <SimpleForm>\n          <ReferenceInput source=\"name\" reference=\"singers\">\n          </ReferenceInput>\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Create>\n);\n\nexport const UserEdit = props => (\n  <Edit {...props}>\n      <SimpleForm>\n        <TextInput source=\"name\" label=\"Tên\" />\n        <TextInput source=\"avatar\" label=\"Avartar\"/>\n        <TextInput source=\"username\" label=\"Tên đăng nhập\" />\n        <TextInput source=\"email\" />\n        <TextInput source=\"fbId\" />\n      </SimpleForm>\n  </Edit>\n);","import React from 'react';\nimport { List, Datagrid, TextField, ImageField, SimpleShowLayout,\n  Show, RichTextField, Create, SimpleForm,Edit,\n   ReferenceInput, TextInput, ArrayField} from 'react-admin';\nexport const Songs = props => (\n    <List {...props}  title=\"List song\">\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"nameSong\" label=\"Bài hát\"/>\n            <TextField source=\"likeNumber\" label=\"Lượt like\" />\n            <TextField source=\"writer\" label=\"Sáng tác\" />\n            <ArrayField source=\"singer\" label=\"Ca sỹ\">\n              <Datagrid>\n                <TextField source=\"singer\"/>\n              </Datagrid>\n            </ArrayField>\n        </Datagrid>\n    </List>\n);\n\nexport const SongDetail = (props) => (\n  <Show {...props}>\n      <SimpleShowLayout>\n        <TextField source=\"nameSong\" label=\"Bài hát\"/>\n            <TextField source=\"likeNumber\" label=\"Lượt like\" />\n            <ImageField source=\"image\"/>\n            <TextField source=\"writer\" label=\"Sáng tác\" />\n            <ArrayField source=\"singer\" label=\"Ca sỹ\">\n              <Datagrid>\n                <TextField source=\"singer\"/>\n              </Datagrid>\n            </ArrayField>\n            <ArrayField source=\"categories\" label=\"Thể loại\">\n              <Datagrid>\n                <TextField source=\"name\"  />\n              </Datagrid>\n            </ArrayField>\n      </SimpleShowLayout>\n  </Show>\n);\n\nexport const SongCreate = props => (\n  <Create {...props}>\n      <SimpleForm>\n          <ReferenceInput source=\"name\" reference=\"singers\">\n          </ReferenceInput>\n          <TextInput source=\"description\" />\n      </SimpleForm>\n  </Create>\n);\n\nexport const SongEdit = props => (\n  <Edit {...props}>\n      <SimpleForm>\n      <TextInput source=\"nameSong\" label=\"Bài hát\"/>\n      <TextInput source=\"writer\" label=\"Sáng tác\" />\n      <TextInput source=\"image\" label=\"Avatar\" />\n      <TextInput source=\"coverImg\" label=\"Ảnh bìa\" />\n      </SimpleForm>\n  </Edit>\n);","import React from 'react';\nimport { List, Datagrid, TextField, ImageField, SimpleShowLayout,\n     Show, RichTextField, Create, SimpleForm,Edit,\n      ReferenceInput, TextInput, SelectInput} from 'react-admin';\n\nexport const Singers = props => (\n    <List {...props}  title=\"List song\">\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"name\" label=\"Tên\"/>\n            <TextField source=\"description\" label=\"Mô tả\"/>\n            <ImageField source=\"avatar\" label=\"Avatar\" />\n        </Datagrid>\n    </List>\n);\n\nexport const SingerDetail = (props) => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField source=\"name\" />\n            <ImageField source=\"avatar\" label=\"Avatar\" />\n            <RichTextField source=\"description\" />\n        </SimpleShowLayout>\n    </Show>\n);\n\nexport const SingerCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <ReferenceInput source=\"name\" reference=\"singers\">\n            </ReferenceInput>\n            <TextInput source=\"description\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const SingerEdit = props => (\n    <Edit {...props}>\n        <SimpleForm>\n           <TextInput source=\"name\" label=\"Tên\"/>\n           <TextInput source=\"description\" label=\"Mô tả\"/>\n           <TextInput source=\"avatar\" label=\"Avatar\"/>\n        </SimpleForm>\n    </Edit>\n);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Admin, Resource, ListGuesser } from 'react-admin';\nimport jsonServerProvider from \"ra-data-json-server\";\nimport { Users, UserCreate, UserEdit, UserDetail } from './Component/Users/Users';\nimport { Songs, SongEdit, SongCreate, SongDetail } from './Component/Songs/Songs';\nimport { Singers, SingerDetail, SingerCreate, SingerEdit } from './Component/Singer/Singer';\n\nconst settings = { total: 'totalCount' };\n\nconst dataProvider = jsonServerProvider('http://localhost:3002/admin/');\n\nfunction App() {\n  return (\n    <Admin dataProvider={dataProvider}>\n      <Resource name=\"songs\" list={Songs} show={SongDetail} edit={SongEdit} create={SongCreate} />\n      <Resource name=\"users\" list={Users} show={UserDetail} edit={UserEdit} create={UserCreate}/>\n      <Resource name=\"singers\" list={Singers} show={SingerDetail} edit={SingerEdit} create={SingerCreate}/>\n    </Admin>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}